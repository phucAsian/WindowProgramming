<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="dsCostProfit" targetNamespace="http://tempuri.org/dsCostProfit.xsd" xmlns:mstns="http://tempuri.org/dsCostProfit.xsd" xmlns="http://tempuri.org/dsCostProfit.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="1" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="SupermarketDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="SupermarketDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Supermarket.Properties.Settings.GlobalReference.Default.SupermarketDBConnectionString" Provider="System.Data.SqlClient" />
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="SupermarketDBConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="SupermarketDBConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Supermarket.Properties.Settings.GlobalReference.Default.SupermarketDBConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ImportCostTableAdapter" GeneratorDataComponentClassName="ImportCostTableAdapter" Name="ImportCostDataTable" UserDataComponentName="ImportCostTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SupermarketDBConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT
  YEAR(io.IssueDate)  AS [Year],
  MONTH(io.IssueDate) AS [Month],
  SUM(io.TotalAmount) AS Cost
FROM dbo.ImportOrder io
WHERE io.Status = N'Issued'
  AND CONVERT(date, io.IssueDate) BETWEEN @From AND @To
GROUP BY YEAR(io.IssueDate), MONTH(io.IssueDate)
ORDER BY YEAR(io.IssueDate), MONTH(io.IssueDate);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="From" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="AnsiString" Direction="Input" ParameterName="@From" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="To" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="AnsiString" Direction="Input" ParameterName="@To" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Year" DataSetColumn="Year" />
              <Mapping SourceColumn="Month" DataSetColumn="Month" />
              <Mapping SourceColumn="Cost" DataSetColumn="Cost" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ProfitTableAdapter" GeneratorDataComponentClassName="ProfitTableAdapter" Name="ProfitDataTable" UserDataComponentName="ProfitTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SupermarketDBConnectionString1 (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT 
  YEAR(so.IssueDate)  AS [Year],
  MONTH(so.IssueDate) AS [Month],
  SUM((so.SellPrice-p.CostPrice)*so.Quantity) AS Profit
FROM dbo.SalesOrder so
JOIN dbo.Product p ON so.ProductId=p.ProductId
WHERE so.Status=N'Issued'
  AND CONVERT(date, so.IssueDate) BETWEEN @From AND @To
GROUP BY YEAR(so.IssueDate), MONTH(so.IssueDate)
ORDER BY YEAR(so.IssueDate), MONTH(so.IssueDate);
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="From" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="AnsiString" Direction="Input" ParameterName="@From" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="To" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="AnsiString" Direction="Input" ParameterName="@To" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Year" DataSetColumn="Year" />
              <Mapping SourceColumn="Month" DataSetColumn="Month" />
              <Mapping SourceColumn="Profit" DataSetColumn="Profit" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="dsCostProfit" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="dsCostProfit" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="dsCostProfit">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ImportCostDataTable" msprop:Generator_RowClassName="ImportCostDataTableRow" msprop:Generator_RowEvHandlerName="ImportCostDataTableRowChangeEventHandler" msprop:Generator_RowDeletedName="ImportCostDataTableRowDeleted" msprop:Generator_RowDeletingName="ImportCostDataTableRowDeleting" msprop:Generator_RowEvArgName="ImportCostDataTableRowChangeEvent" msprop:Generator_TablePropName="ImportCostDataTable" msprop:Generator_RowChangedName="ImportCostDataTableRowChanged" msprop:Generator_UserTableName="ImportCostDataTable" msprop:Generator_RowChangingName="ImportCostDataTableRowChanging" msprop:Generator_TableClassName="ImportCostDataTableDataTable" msprop:Generator_TableVarName="tableImportCostDataTable">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Year" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Year" msprop:Generator_ColumnPropNameInTable="YearColumn" msprop:Generator_ColumnPropNameInRow="Year" msprop:Generator_ColumnVarNameInTable="columnYear" type="xs:int" minOccurs="0" />
              <xs:element name="Month" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Month" msprop:Generator_ColumnPropNameInTable="MonthColumn" msprop:Generator_ColumnPropNameInRow="Month" msprop:Generator_ColumnVarNameInTable="columnMonth" type="xs:int" minOccurs="0" />
              <xs:element name="Cost" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Cost" msprop:Generator_ColumnPropNameInTable="CostColumn" msprop:Generator_ColumnPropNameInRow="Cost" msprop:Generator_ColumnVarNameInTable="columnCost" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ProfitDataTable" msprop:Generator_RowClassName="ProfitDataTableRow" msprop:Generator_RowEvHandlerName="ProfitDataTableRowChangeEventHandler" msprop:Generator_RowDeletedName="ProfitDataTableRowDeleted" msprop:Generator_RowDeletingName="ProfitDataTableRowDeleting" msprop:Generator_RowEvArgName="ProfitDataTableRowChangeEvent" msprop:Generator_TablePropName="ProfitDataTable" msprop:Generator_RowChangedName="ProfitDataTableRowChanged" msprop:Generator_UserTableName="ProfitDataTable" msprop:Generator_RowChangingName="ProfitDataTableRowChanging" msprop:Generator_TableClassName="ProfitDataTableDataTable" msprop:Generator_TableVarName="tableProfitDataTable">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Year" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Year" msprop:Generator_ColumnPropNameInTable="YearColumn" msprop:Generator_ColumnPropNameInRow="Year" msprop:Generator_ColumnVarNameInTable="columnYear" type="xs:int" minOccurs="0" />
              <xs:element name="Month" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Month" msprop:Generator_ColumnPropNameInTable="MonthColumn" msprop:Generator_ColumnPropNameInRow="Month" msprop:Generator_ColumnVarNameInTable="columnMonth" type="xs:int" minOccurs="0" />
              <xs:element name="Profit" msdata:ReadOnly="true" msprop:Generator_UserColumnName="Profit" msprop:Generator_ColumnPropNameInTable="ProfitColumn" msprop:Generator_ColumnPropNameInRow="Profit" msprop:Generator_ColumnVarNameInTable="columnProfit" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>